{"version":3,"sources":["Components/Card.js","Components/Cardlist.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","Cardlist","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundry","state","haserror","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAiBeA,EAdF,SAACC,GACT,OACQ,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAK,SAAQC,IAAG,+BAA0BH,EAAMI,GAAhC,cACrB,gCACE,mCAAMJ,EAAMK,KAAZ,OACA,kCAAKL,EAAMM,MAAX,cCUDC,EAhBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAElB,OACW,8BACHA,EAAOC,KAAI,SAACC,EAAKC,GACxB,OAAQ,cAAC,EAAD,CAERP,GAAII,EAAOG,GAAGP,GACbC,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,OAHbK,SCOQC,EAdG,SAAC,GAAiC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACI,sBAAKb,UAAU,MAAf,UACE,uBACAA,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAYH,IALd,QCMUI,G,MARA,SAAClB,GACf,OACQ,qBAAKmB,MAAQ,CAAEC,SAAS,SAAUC,OAAO,kBAAmBC,OAAO,SAAnE,SACCtB,EAAMuB,aCgBDC,E,kDAlBd,WAAYxB,GAAO,IAAD,8BACjB,cAAMA,IACDyB,MAAQ,CACZC,UAAU,GAHM,E,qDAMlB,SAAkBC,EAAMC,GACvBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAGzB,WACC,OAAIG,KAAKJ,MAAMC,SACP,6DAEDG,KAAK7B,MAAMuB,a,GAfOQ,aCmDZC,E,kDA1Cd,aAAc,IAAD,8BACZ,gBAeDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAACjB,YAAaqB,EAAMC,OAAOC,SAfzC,EAAKX,MAAQ,CACZjB,OAAQ,GACRK,YAAc,IAJH,E,qDASV,WAAoB,IAAD,OAClBwB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAE,EAAKX,SAAS,CAACtB,OAAQiC,S,oBAQxC,WAAS,IAAD,OACDC,EAAiBb,KAAKJ,MAAMjB,OAAOmC,QAAO,SAAAC,GAC/C,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS,EAAKrB,MAAMZ,YAAYgC,kBAEjE,OAAgC,IAA5BhB,KAAKJ,MAAMjB,OAAOuC,OACd,oBAAI9C,UAAU,KAAd,qBAGP,sBAAKA,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAE,EAAF,CAAYa,aAAce,KAAKI,iBAC/B,cAAC,EAAD,UACU,cAAC,EAAD,UACR,cAAC,EAAD,CAAUzB,OAAQkC,e,GAlCPX,aCEHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d7edbbba.chunk.js","sourcesContent":["import React from 'react';\nimport 'tachyons';\n\nconst Card = (props) => {\n     return(\n             <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t             <img alt ='robots'src={`https://robohash.org/${props.id}?200x200`} />\n\t             <div>\n\t\t              <h2> {props.name} </h2>\n\t\t              <p> {props.email} </p>\n\t             </div>\n             </div>\n\n\n     \t);\n\n}\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst Cardlist = ({robots}) => {\n\t\n\treturn(\n            <div>\n\t\t\t     {robots.map((user,i) =>{\n\t\treturn( <Card \n\t\tkey={i}\n\t\tid={robots[i].id}\n\t\t name={robots[i].name} \n\t\t email={robots[i].email} />\n\t\t );\n\t})}\n      \n   \t\t\t </div>\n\t\t);\n}\nexport default Cardlist;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange }) => {\n\treturn (\n\t\t   <div className='pa2' >\n\t\t\t    <input \n\t\t\t    className='pa3 ba b--green bg-lightest-blue'\n\t\t\t    type='search' \n\t\t\t    placeholder='search robots'\n\t\t\t    onChange = {searchChange}\n\t\t\t     />\n\t\t\t    }\n\t\t   </div>\n\t\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) =>{\n\treturn(\n         <div style= {{ overflow:'Scroll', border:'5px solid black' ,height:'800px'  }} >\n         {props.children}\n         </div>\n\t\t);\n} ;\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thaserror: false\n\t\t}\n\t}\n\tcomponentDidCatch(error,info){\n\t\tthis.setState({haserror:true})\n\n\t}\n\trender(){\n\t\tif (this.state.haserror){\n\t\t\treturn <h1> Ooops.... That is not good</h1>\n\t\t}\n\t\treturn this.props.children\n\t}\n}\n\nexport default ErrorBoundry;\n","import React, {Component} from 'react';\nimport Cardlist from '../Components/Cardlist';\nimport SearchBox from '../Components/SearchBox';\nimport 'tachyons';\nimport './App.css';\nimport Scroll from '../Components/Scroll';\nimport ErrorBoundry from '../Components/ErrorBoundry';\n\n\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield : ''\n\n\t\t}\n\t}\n\n    componentDidMount(){\n    \tfetch('https://jsonplaceholder.typicode.com/users')\n    \t.then(response=> response.json())\n    \t.then(users=>this.setState({robots: users}));\n    \t\n    }\n\n\tonSearchChange = (event)=>{\n\t\tthis.setState({searchfield: event.target.value})\n\t\t\n\t}\n\trender(){\n\t\tconst filteredRobots = this.state.robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n\t\t})\n\t\tif (this.state.robots.length ===0){\n\t\t\treturn <h1 className='tc'  >Loading</h1>\n\t\t} else {\n\t\t\treturn(\n\t\t\t<div className='tc'>\n\t\t\t  <h1 className='f1' >RoboFriends</h1>\n\t\t\t  < SearchBox searchChange={this.onSearchChange}/>\n\t\t\t  <Scroll>\n               <ErrorBoundry>\n\t\t\t  \t <Cardlist robots={filteredRobots} />\n\t\t\t  \t</ErrorBoundry>\n\t\t\t  </Scroll>\n\t         </div>\n\t\t);\n\t\t}\n\t\t\n\t}\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './Containers/App';\n\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}